from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, URLInputFile

from api import get_campaign, get_current_day
from utils.image import image_id2url
from .start import send_start_menu


async def send_campaign_menu(bot: Bot, chat_id: int, state: FSMContext):
    data = await state.get_data()
    campaign = await get_campaign(data.get("advertiser_id"), data.get("campaign_id"))
    if not campaign:
        return await send_start_menu(bot, chat_id, state)
    now = await get_current_day()
    current_date = await get_current_day()

    kb = InlineKeyboardMarkup(inline_keyboard=[
        *(
            [[InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="edit_campaign")]]
            if now <= campaign.end_date else []
        ),
        [InlineKeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="stat_campaign")],
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é", callback_data="delete_campaign")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="advert_menu")]
    ])

    title_text = f"<b>{campaign.ad_title}</b>"
    if current_date > campaign.end_date:
        title_text += f" <code>[–ó–ê–ö–û–ù–ß–ò–õ–ê –†–ê–ë–û–¢–£]</code>"
    elif current_date >= campaign.start_date:
        title_text += f" <code>[–í –†–ê–ë–û–¢–ï]</code>"

    text = (f"{title_text}\n"
       f"<i>{campaign.ad_text}</i>\n\n"
       f"–õ–∏–º–∏—Ç –ø–æ–∫–∞–∑–æ–≤: <code>{campaign.impressions_limit}</code>\n"
       f"–°—Ç–æ–∏–º–æ—Å—Ç—å 1 –ø–æ–∫–∞–∑–∞: <code>{campaign.cost_per_impression}</code>\n"
       f"–õ–∏–º–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: <code>{campaign.clicks_limit}</code>\n"
       f"–°—Ç–æ–∏–º–æ—Å—Ç—å 1 –ø–µ—Ä–µ—Ö–æ–¥–∞: <code>{campaign.cost_per_click}</code>\n"
       f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <code>{campaign.start_date} -> {campaign.end_date}</code>\n"
       f"–ü–æ–ª –¶–ê: <code>{campaign.targeting.gender or 'ALL'}</code>\n"
       f"–í–æ–∑—Ä–∞—Å—Ç –¶–ê: <code>{campaign.targeting.age_from or 'ANY'} -> {campaign.targeting.age_to or 'ANY'}</code>\n"
       f"–õ–æ–∫–∞—Ü–∏—è –¶–ê: <code>{campaign.targeting.location or 'ANY'}</code>\n")

    if campaign.ad_image_url:
        await bot.send_photo(chat_id, caption=text, photo=URLInputFile(image_id2url(campaign.ad_image_id)), reply_markup=kb)
    else:
        await bot.send_message(chat_id, text, reply_markup=kb)

async def send_campaign_edit_menu(bot: Bot, chat_id: int, state: FSMContext):
    data = await state.get_data()
    now = await get_current_day()
    campaign = await get_campaign(data.get("advertiser_id"), data.get("campaign_id"))
    if not campaign:
        return await send_start_menu(bot, chat_id, state)
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text = "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="ecamp_title"),
            InlineKeyboardButton(text = "–¢–µ–∫—Å—Ç –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="ecamp_text")
        ],
        [
            InlineKeyboardButton(text = "–¶–µ–Ω–∞ –∑–∞ 1 –ø–æ–∫–∞–∑", callback_data="ecamp_impression_cost"),
            InlineKeyboardButton(text = "–¶–µ–Ω–∞ –∑–∞ 1 –ø–µ—Ä–µ—Ö–æ–¥", callback_data="ecamp_clicks_cost")
        ],
        [
            InlineKeyboardButton(text="–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è", callback_data="ecamp_target_gender"),
            InlineKeyboardButton(text="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏", callback_data="ecamp_image"),
        ],
        *(([
            InlineKeyboardButton(text="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", callback_data="ecamp_start_date"),
            InlineKeyboardButton(text="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", callback_data="ecamp_end_date")
        ],
        [
            InlineKeyboardButton(text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–æ–≤", callback_data="ecamp_impressions_limit"),
        ],
        [
            InlineKeyboardButton(text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤", callback_data="ecamp_clicks_limit")
        ]) if now < campaign.start_date else ()),
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="campaign_menu"),
        ]
    ])

    await bot.send_message(chat_id, "<b>–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?</b>", reply_markup=kb)